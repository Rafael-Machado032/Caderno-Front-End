MySQL
//DDL Data Definition Language (Linguagem de Definição de dados)

//*Criar Banco de Dados
//Para criar um banco de dados seleciona "Query/New Tab to Current Serve"

CREATE SCHEMA estudoSQL;
//ou
CREATE DATABASE estudoSQL;
//Os dois comandos são o mesmo

//*Para criar uma tabela

CREATE TABLE cliente(   //cliente é o nome da tabela
    i_cliente_cliente INT PRIMARY KEY NOT NULL AUTO_INCREMENT, // (tipo de dado)_(nome do campo)_(nome da tabela)
    s_nome_cliente VARCHAR(50) NOT NILL,
    s_cpf_cliente CHAR(11) NOT NULL,
    d_nasc_cliente DATETIME
);


//PRIMARY KEY       Chave primaria
//NOT NULL          Não pode ser nulo obs: Caso for chave primaria não precisa declarar NOT NULL pois e obrigatória o preenchimento
//AUTO_INCREMENT    Banco de dados que vai administrar com o valor definido automaticamente

//INT               Inteiro
//VARCHAR(n)        O VARCHAR tem tamanho dinâmico ou seja ocupa até o limite n se não usar desocupa para outro campo 
//CHAR(n)           O CHAR tem tamanho fixo ou seja ocupa n espaço mesmo que não esteja usando

//*Deletar o banco de dados

DROP SCHEMA cursos;

//*Deletar tabela

DROP TABLE cliente

//*Alterar tabela

ALTER TABLE cliente MODIFY COLUMN s_nome_cliente VARCHAR(30) NOT NULL; //Altera de 50 para 30 e não vazio

//*Adicionar coluna

ALTER TABLE cliente ADD i_tipo_cliente INT DEFAULT 1; Adiciona uma coluna com o valor padra 1

//*Excluir coluna

ALTER TABLE cliente DROP i_tipo_cliente;

/*Para comentário SQL*/

//*Ligar 2 tabelas (Chave Primaria/Chave Estrangeira)

CREATE TABLE cliente(   //Tabela Cliente
    i_tipo_cliente INT NOT NULL;
    i_cliente_cliente INT PRIMARY KEY NOT NULL AUTO_INCREMENT, // (tipo de dado)_(nome do campo)_(nome da tabela)
    s_nome_cliente VARCHAR(50) NOT NILL,
    s_cpf_cliente CHAR(11) NOT NULL,
    d_nasc_cliente DATETIME
);

create table tipo_cliente( //Tabela Tipo Cliente
    i_tipocliente_tipocliente INT PRIMARY KEY AUTO_INCREMENT,
    s_dectipocliente_tipocliente VARCHAR(100) NOT NULL
);


/*ALTER TABLE <tabela_origem> ADD CONSTRAINT <nome_restrição> FOREIGN KEY (<campo_tabela_origem>) REFERENCES <tabela_destino> (<camp_tabela_destino>);*/

//ADD CONSTRAINT    Adiciona a nome da restrição
//FOREIGN KEY       Tipo é Chave estrangeira  
//REFERENCES        Referencia da tabela de destino

ALTER TABLE cliente ADD CONSTRAINT fk_tipocliente FOREIGN KEY (i_tipo_cliente) REFERENCES tipo_cliente (i_tipocliente_tipocliente);

//fk_tipocliente = i_tipo_cliente -> i_tipocliente_tipocliente
//Ao fazer o INSERT no i_tipo_cliente o valor tem que ser igual ao valor i_tipocliente_tipocliente para adicionar














